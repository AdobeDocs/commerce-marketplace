{"version":3,"file":"component---src-pages-guides-sellers-extension-update-information-md-efa5f866e995f72e1c59.js","mappings":"kSAQaA,EAAe,CAAC,EAOvBC,GALgBC,EAKY,cALJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EACjB,GAHqBD,MAMtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,8BACH,+BACL,kBAAK,uCACL,oBACE,eAAIC,WAAW,OAAK,mBAAQA,WAAW,MAAO,OAAgB,WAAS,cAAGA,WAAW,KACjF,KAAQ,wBACL,uBACP,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAO,UAAmB,yFACjE,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAO,SAAkB,gRAChE,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAO,eAAwB,2PAExE,eACE,GAAM,gCACH,iCACL,kBAAK,sKACL,kBAAK,0CACL,oBACE,eAAIA,WAAW,MAAO,mLACtB,eAAIA,WAAW,MAAO,+IAExB,SAACX,EAAD,CAAaY,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,kBAAK,uGAGR,CAEDF,EAAWM,gBAAiB,C","sources":["webpack://commerce-marketplace/./src/pages/guides/sellers/extension-update-information.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-marketplace/commerce-marketplace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"update-listing-information\"\n    }}>{`Update listing information`}</h1>\n    <p>{`There are four submission options:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`New`}</strong>{` - See `}<a parentName=\"li\" {...{\n          \"href\": \"submit-for-review.md\"\n        }}>{`Submit for Review`}</a></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Update`}</strong>{` - You can update only the marketing information for a product already in the store.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Patch`}</strong>{` - If the system detects that the semantic versioning is a patch update, it will prompt you to indicate if it is a patch. If your answer is yes, the submission bypasses marketing review and, once all technical review tests are complete, the version goes to the store.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Backporting`}</strong>{` - Submit a new version to an older line than what is currently on the store. For example, if you have posted 1.0 and 2.0 versions of your extension, and you have a security fix for the 1.0 line. You can now submit versions such as 1.1 or 1.0.1.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"update-marketing-information\"\n    }}>{`Update marketing information`}</h2>\n    <p>{`Say you have product in the store and you want to update its marketing information. You can do this by going clicking Update in the Marketing Submission section.`}</p>\n    <p>{`You can then do one of the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Update the product price, support tier price, or installation price ONLY, and then submit. These changes will bypass marketing review and update the information in the store.`}</li>\n      <li parentName=\"ul\">{`Update any other field (or pricing and any other field) and submit. This will put the extension back into the queue for marketing review.`}</li>\n    </ul>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`You do NOT have to remove your product from the store in order to update its marketing information.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}