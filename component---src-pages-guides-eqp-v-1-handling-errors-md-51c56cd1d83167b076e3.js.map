{"version":3,"file":"component---src-pages-guides-eqp-v-1-handling-errors-md-51c56cd1d83167b076e3.js","mappings":"8RAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,mBADR,oBAGA,gEACA,eACE,GAAM,+BADR,gCAGA,+FACA,qBAAK,iBAAMC,WAAW,MAClB,UAAa,iBADZ,iGAOL,eACE,GAAM,oBADR,qBAGA,0EAA2D,cAAGA,WAAW,IACrE,KAAQ,gCAD+C,iBAA3D,QAEkC,mBAAQA,WAAW,KAAnB,kBAFlC,yGAE6L,uBAAYA,WAAW,KAAvB,QAF7L,SAEsP,uBAAYA,WAAW,KAAvB,WAFtP,oDAGA,oBACE,eAAIA,WAAW,MAAf,MAA0B,uBAAYA,WAAW,MAAvB,QAA1B,wDACA,eAAIA,WAAW,MAAf,cAAkC,uBAAYA,WAAW,MAAvB,QAAlC,uEAEF,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,8iBAsBR,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-marketplace/./src/pages/guides/eqp/v1/handling-errors.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-marketplace/commerce-marketplace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"handling-errors\"\n    }}>{`Handling errors`}</h1>\n    <p>{`Consider these tips when handling errors.`}</p>\n    <h2 {...{\n      \"id\": \"complete-processing-failure\"\n    }}>{`Complete processing failure`}</h2>\n    <p>{`All HTTP 4xx errors contain a JSON payload with the following structure:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"code\" : 1208,\n  \"message\" : \"Insufficient information for Technical Submission\"\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"batch-processing\"\n    }}>{`Batch processing`}</h2>\n    <p>{`Unless there was a complete failure in processing a `}<a parentName=\"p\" {...{\n        \"href\": \"rest-api.md#batch-processing\"\n      }}>{`batch request`}</a>{`, a `}<strong parentName=\"p\">{`batch response`}</strong>{` always returns an overall HTTP 200 response code.  However, each item in the batch array contains a `}<inlineCode parentName=\"p\">{`code`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`message`}</inlineCode>{` pair indicating its specific pass/fail result.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`a `}<inlineCode parentName=\"li\">{`code`}</inlineCode>{` of 200 indicates successful processing of the item`}</li>\n      <li parentName=\"ul\">{`a non-200 `}<inlineCode parentName=\"li\">{`code`}</inlineCode>{` indicates an error occurred while attempting to process the item`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`// the overall HTTP response code will be a 200 ...\n[\n    {\n      // ... however each subsection of the batch response might have a non-200 error code\n      \"code\" : 1208,\n      \"message\" : \"Insufficient information for Technical Submission\"\n    },\n    {\n      \"code\" : 1210,\n      \"message\" : \"Invalid SKU given. SKU must be of the form 'vendor_name/package_name'\"\n    },\n    {\n      \"code\" : 200,\n      \"message\" : \"Success\",\n      // ... etc. Successful batch submissions also have all the fields from a successful result.\n    }\n]\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}